- name: Configure Server
  hosts: oradb
  become: yes
  vars_files:
    - secrets.yml
  tasks:
  - name: Install packages
    yum:
      name: "{{ item.pak }}"
      state: latest
    become_user: root
    loop:
      - { pak: mdadm}
      - { pak: binutils }
      - { pak: compat-libcap1 }
      - { pak: compat-libstdc++-33-3.2.3-72.el7.i686 }
      - { pak: compat-libstdc++-33-3.2.3-72.el7.x86_64 }
      - { pak: gcc }
      - { pak: gcc-c++ }
      - { pak: glibc.i686 }
      - { pak: glibc }
      - { pak: glibc-devel.i686 }
      - { pak: glibc-devel }
      - { pak: ksh }
      - { pak: libaio.i686 }
      - { pak: libaio }
      - { pak: libaio-devel.i686 }
      - { pak: libaio-devel }
      - { pak: libgcc.i686 }
      - { pak: libgcc }
      - { pak: libstdc++.i686 }
      - { pak: libstdc++ }
      - { pak: libstdc++-devel.i686 }
      - { pak: libstdc++-devel }
      - { pak: libXi.i686 }
      - { pak: libXi }
      - { pak: libXtst.i686 }
      - { pak: libXtst}
      - { pak: make }
      - { pak: sysstat }
  - name: Disable SELinux
    selinux:
      state: disabled
    become_user: root
  - name: Disable Firewall daemon
    service: 
      name: firewalld 
      state: stopped 
      enabled: no
    become_user: root
  - name: Adjust Kernel Parameters
    sysctl:
      name: "{{ item.key }}"
      value: "{{ item.value }}"
      state: present
    become_user: root
    loop:
      - { key: fs.file-max, value: 6815744 }
      - { key: kernel.sem, value: 250 32000 100 128 }
      - { key: kernel.shmmni, value: 4096 }
      - { key: kernel.shmall, value: 4294967296 }
      - { key: kernel.shmmax, value: 4398046511104 }
      - { key: kernel.panic_on_oops, value: 1 }
      - { key: net.core.rmem_default, value: 262144 }
      - { key: net.core.rmem_max, value: 4194304 }
      - { key: net.core.wmem_default, value: 262144 }
      - { key: net.core.wmem_max, value: 1048576 }
      - { key: net.ipv4.conf.all.rp_filter, value: 2 }
      - { key: net.ipv4.conf.default.rp_filter, value: 2 }
      - { key: fs.aio-max-nr, value: 1048576 }
      - { key: net.ipv4.ip_local_port_range, value: 9000 65500 }
  - name: Partition Disks
    parted:
      device: "{{ item.device }}"
      number: 1
      flags: [ raid ]
      state: present
    become_user: root  
    loop:
      - {device: /dev/sdc}
      - {device: /dev/sdd}
      - {device: /dev/sde}
      - {device: /dev/sdf}
      - {device: /dev/sdg}
      - {device: /dev/sdh}
      - {device: /dev/sdi}
      - {device: /dev/sdj}
      - {device: /dev/sdk}
      - {device: /dev/sdl}
  - name: Configure Software RAID Volume data
    shell: mdadm --create /dev/md/mdoradata --level=0 --raid-devices=5 /dev/sdc1 /dev/sdd1 /dev/sde1 /dev/sdf1 /dev/sdg1
    become_user: root
  - name: Configure Software RAID Volume archivelog
    shell: mdadm --create /dev/md/mdarch --level=0 --raid-devices=3 /dev/sdh1 /dev/sdi1 /dev/sdl1
    become_user: root
  - name: Configure Software RAID Volume RMAN
    shell: mdadm --create /dev/md/mdrman --level=0 --raid-devices=2 /dev/sdk1 /dev/sdj1
    become_user: root
  - name: Format RAID Volumes
    filesystem:
      fstype: ext4
      dev: "{{ item.raid }}"
    become_user: root
    loop:
      - {raid: /dev/md/mdoradata}
      - {raid: /dev/md/mdarch}
      - {raid: /dev/md/mdrman}
  - name: Get md127 UUID
    shell: /sbin/blkid /dev/md127 -s UUID -o value "$1"
    register: md127uuid
  - name: Get md126 UUID
    shell: /sbin/blkid /dev/md126 -s UUID -o value "$1"
    register: md126uuid
  - name: Get md125 UUID
    shell: /sbin/blkid /dev/md125 -s UUID -o value "$1"
    register: md125uuid
  - name: Add to fstab
    mount:
      path: "{{ item.path }}"
      src: UUID="{{ item.uuid }}"
      fstype: ext4
      opts: defaults,nofail
      passno: 2
      state: mounted
    become_user: root
    loop:
      - { uuid: "{{ md127uuid.stdout }}", path: /oradata }
      - { uuid: "{{ md126uuid.stdout }}", path: /archivelog }
      - { uuid: "{{ md125uuid.stdout }}", path: /rman }
  - name: Save RAID Config
    shell: mdadm --detail --scan --verbose >> /etc/mdadm.conf
    become_user: root
  - name: Create Groups
    group:
      name: "{{ item.group }}"
      state: present
    become_user: root
    loop:
      - { group: oinstall }
      - { group: dba }
      - { group: oper }
  - name: Create Oracle User
    user:
      name: oracle
      groups: "{{ item.group }}"
      password: "{{ oraclepass }}"
      state: present
      append: yes
    become_user: root
    loop:
      - { group: oinstall }
      - { group: dba }
      - { group: oper }
  - name: Add Oracle User Limits
    lineinfile: dest=/etc/security/limits.conf line='oracle {{ item.limit }} {{ item.type}} {{ item.value }}'
    become_user: root
    loop:
      - { limit: 'soft', type: nofile, value: 4096 }
      - { limit: 'hard', type: nofile, value: 65536 }
      - { limit: 'soft', type: nproc, value: 2047 }
      - { limit: 'hard', type: nproc, value: 16384 }
      - { limit: 'soft', type: stack, value: 10240 }
      - { limit: 'hard', type: stack, value: 32768 }
      - { limit: 'soft', type: memlock, value: 60397978 }
      - { limit: 'hard', type: memlock, value: 60397978 }
  - name: Create Base Directories
    file:
      state: directory
      path: /oracle/app
      owner: oracle
      group: oinstall
  - name: Create Disable Transparent Huge Pages script
    copy:
      dest: ~/disable_trans_hugepages.sh
      mode: 755
      content: "
        cat << EOF >> /etc/rc.local\n
        if test -f /sys/kernel/mm/transparent_hugepage/enabled; then\n
        \techo never > /sys/kernel/mm/transparent_hugepage/enabled\n
        fi\n
        if test -f /sys/kernel/mm/transparent_hugepage/defrag; then\n
        \techo never > /sys/kernel/mm/transparent_hugepage/defrag\n
        fi\n
        EOF\n
        if test -f /sys/kernel/mm/transparent_hugepage/enabled; then\n
        \techo never > /sys/kernel/mm/transparent_hugepage/enabled\n
        fi\n
        if test -f /sys/kernel/mm/transparent_hugepage/defrag; then\n
        \techo never > /sys/kernel/mm/transparent_hugepage/defrag\n
        fi\n"
  - name: Run Disable Transparent Hugepages script
    shell: ~/disable_trans_hugepages.sh
    become_user: root
